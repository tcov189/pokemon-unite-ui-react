{"version":3,"sources":["Layout/Header.jsx","Layout/Footer.jsx","Layout/Content.jsx","Global/UniteLoader.jsx","services/pokemonUnitApiService.js","hooks/usePokemonList.js","Pages/PokemonList/PokemonListItem.jsx","Pages/PokemonList.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","className","Footer","Content","children","UniteLoader","loading","css","height","fetchAllPokemon","a","fetch","method","headers","body","JSON","stringify","query","variables","result","json","usePokemonList","useState","pokemonList","setPokemonList","getPokemon","cache","localStorage","getItem","parse","res","data","all_pokemon","setItem","console","error","useEffect","PokemonListItem","pokemon","style","flexBasis","src","image_path","alt","name","PokemonList","setLoading","setTimeout","map","id","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uNAeeA,MAbf,WACI,OACI,yBAAQC,UAAU,wDAAlB,UACI,qBAAKA,UAAU,OAAf,iBAGA,8CCEGC,MARf,WACI,OACI,qBAAKD,UAAU,0DAAf,4E,OCMOE,MARf,YAAgC,IAAbC,EAAY,EAAZA,SACf,OACI,qBAAKH,UAAU,cAAf,SACMG,K,QCMCC,MATf,YAAmC,IAAZC,EAAW,EAAXA,QACnB,OACI,sBAAKL,UAAU,6BAAf,UACI,mBAAGA,UAAU,UAAb,wBACA,cAAC,YAAD,CAAWM,IAAK,kBAAmBD,QAASA,EAASE,OAAQ,Q,uBCNlE,SAAeC,IAAtB,+B,4CAAO,4BAAAC,EAAA,srBAwCgBC,MACnB,uDACA,CACEC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAU,CACnBC,MAhDD,inBAiDCC,UAAW,OAjDZ,cAwCCC,EAxCD,gBAsDQA,EAAOC,OAtDf,oF,sBC+BQC,MA5Bf,WACE,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAEMC,EAAU,uCAAG,8BAAAf,EAAA,oEAETgB,EAAQC,aAAaC,QAAQ,qBAFpB,gBAKbJ,EAAeT,KAAKc,MAAMH,IALb,uCAOKjB,IAPL,OAOPqB,EAPO,OASbN,EAAeM,EAAIC,KAAKC,aAExBL,aAAaM,QAAQ,mBAAoBlB,KAAKC,UAAUc,EAAIC,KAAKC,cAXpD,0DAcfE,QAAQC,MAAR,MAde,0DAAH,qDAsBhB,OAJAC,qBAAU,WACRX,MACC,IAEIF,GCVMc,MAhBf,YAAuC,IAAZC,EAAW,EAAXA,QACvB,OACI,sBACIrC,UAAU,8GACVsC,MAAO,CACHC,UAAW,OAHnB,UAMI,qBAAKvC,UAAU,SAAf,SACI,qBAAKwC,IAAKH,EAAQI,WAAYC,IAAG,UAAKL,EAAQM,KAAb,gBAErC,4BAAKN,EAAQM,WCqBVC,MA5Bf,WACE,IAAMtB,EAAcF,IAEpB,EAA8BC,oBAAS,GAAvC,mBAAOhB,EAAP,KAAgBwC,EAAhB,KAQA,OANAV,qBAAU,WACRW,YAAW,WACTD,GAAW,KACV,OACF,CAACvB,IAGF,eAAC,EAAD,WACGjB,GAAW,cAAC,EAAD,CAAaA,QAASA,KAEhCA,GACA,qBAAKL,UAAU,gCAAf,SAEIsB,EAAYyB,KAAI,SAACV,GACf,OAAO,cAAC,EAAD,CAAiBA,QAASA,GAAcA,EAAQW,aCXtDC,MAVf,WACE,OACE,sBAAKjD,UAAU,qEAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,QCGSkD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.ae666ab8.chunk.js","sourcesContent":["import React from 'react'\n\nfunction Header() {\n    return (\n        <header className=\"flex py-2 px-2 mb-2 bg-gray-600 text-gray-200 text-xl\">\n            <div className=\"pr-5\">\n                Nav\n            </div>\n            <div>\n                Pokemon\n            </div>\n        </header>\n    )\n}\n\nexport default Header\n","import React from 'react'\n\nfunction Footer() {\n    return (\n        <div className=\"py-1 px-2 text-center bg-gray-600 text-gray-200 text-sm\">\n            Pok√©mon images &amp; names &copy; 1995-2021 Nintendo/Game Freak.\n        </div>\n    )\n}\n\nexport default Footer\n","import React from 'react'\n\nfunction Content({ children }) {\n    return (\n        <div className=\"px-2 flex-1\">\n            { children }\n        </div>\n    )\n}\n\nexport default Content\n","import { BarLoader } from \"react-spinners\";\n\nfunction UniteLoader({ loading }) {\n    return (\n        <div className=\"flex flex-col items-center\">\n            <p className=\"text-lg\">Loading...</p>\n            <BarLoader css={'display: block;'} loading={loading} height={8} />\n        </div>\n    )\n}\n\nexport default UniteLoader\n","export async function fetchAllPokemon() {\n  const query = `\n  {\n    all_pokemon {\n      id\n      name\n      image_path\n      battle_type\n      attack_type\n      difficulty\n      ability_name\n      ability_description\n      ability_icon_path\n      offense\n      endurance\n      mobility\n      scoring\n      support\n      created_at\n      updated_at\n      moves {\n        name\n        slot\n        icon_path\n        description\n        category\n        cooldown\n        unlock_level\n        upgrade_level\n        upgrade_effect\n        is_evolved_special_attack\n      }\n    evolutions {\n      name\n      stage\n      level_evolved_at\n    }\n    }\n}`;\n\n  const result = await fetch(\n    \"https://pokemon-unite-api.trevor-builds-apps.com/api\",\n    {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        query: query,\n        variables: {},\n      }),\n    }\n  );\n\n  return await result.json();\n}\n","import { useState, useEffect } from 'react';\nimport { fetchAllPokemon } from '../services/pokemonUnitApiService';\n\nfunction usePokemonList() {\n  const [pokemonList, setPokemonList] = useState([]);\n\n  const getPokemon = async () => {\n    try {\n      const cache = localStorage.getItem('pokemonListCache');\n\n      if (cache) {\n        setPokemonList(JSON.parse(cache));\n      } else {\n        const res = await fetchAllPokemon();\n\n        setPokemonList(res.data.all_pokemon);\n\n        localStorage.setItem('pokemonListCache', JSON.stringify(res.data.all_pokemon));\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    getPokemon();\n  }, []);\n\n  return pokemonList;\n}\n\nexport default usePokemonList","import React from 'react'\n\nfunction PokemonListItem({ pokemon }) {\n    return (\n        <div\n            className=\"flex flex-col items-center p-2 m-1 bg-gray-900 border border-yellow-200 rounded-lg text-gray-200 capitalize\"\n            style={{\n                flexBasis: '45%',\n            }}\n        >\n            <div className=\"w-7/12\">\n                <img src={pokemon.image_path} alt={`${pokemon.name} profile`} />\n            </div>\n            <p>{ pokemon.name }</p>\n        </div>\n    )\n}\n\nexport default PokemonListItem\n","import { useEffect, useState } from \"react\";\nimport Content from \"../Layout/Content\";\nimport UniteLoader from \"../Global/UniteLoader\";\nimport usePokemonList from \"../hooks/usePokemonList\";\nimport PokemonListItem from \"./PokemonList/PokemonListItem\";\n\nfunction PokemonList() {\n  const pokemonList = usePokemonList();\n\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setLoading(false);\n    }, 1000);\n  }, [pokemonList]);\n\n  return (\n    <Content>\n      {loading && <UniteLoader loading={loading} />}\n\n      {!loading && (\n        <div className=\"flex flex-wrap justify-center\">\n          {\n            pokemonList.map((pokemon) => {\n              return <PokemonListItem pokemon={pokemon} key={pokemon.id} />\n            })\n          }\n        </div>\n      )}\n    </Content>\n  );\n}\n\nexport default PokemonList;\n","import Header from './Layout/Header'\nimport Footer from './Layout/Footer'\nimport PokemonList from './Pages/PokemonList';\n\nfunction App() {\n  return (\n    <div className=\"bg-gray-500 min-h-screen flex flex-col justify-between antialiased\">\n      <Header />\n      <PokemonList />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}